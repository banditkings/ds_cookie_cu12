[tool.poetry]
name = "{{ cookiecutter.project_name }}"
version = "0.1.0"
description = ""
authors = ["{{ cookiecutter.author }} <{{ cookiecutter.email }}>"]
readme = "README.md"
packages = [{include = "{{ cookiecutter.package_name }}", from="src"}]

[tool.poetry.dependencies]
python = "^{{ cookiecutter.python_version }}"
numpy = "^1.24.3"
pandas = "^2.0.1"
scikit-learn = "^1.2.2"
fastparquet = "^2023.4.0"
statsmodels = "^0.14.0"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
matplotlib = "^3.7.1"
ipykernel = "^6.23.1"
pydantic = "^1.10.7"
pytest = "^7.3.1"
jupyter = "^1.0.0"
nbformat = "^5.8.0"
ipywidgets = "^8.0.6"
openpyxl = "^3.1.2"
pre-commit = "^3.6.1"
sidetable = "^0.9.1"

[tool.poetry.group.plotly]
optional = true

[tool.poetry.group.plotly.dependencies]
plotly = "^5.14.1"
kaleido = "0.2.1"

[tool.poetry.group.rapids]
optional = true

[tool.poetry.group.rapids.dependencies]
cudf-cu12 = { version = "^24.4", source = "nvidia_pypi" }
dask-cudf-cu12 = { version = "^24.4", source = "nvidia_pypi" }
cuml-cu12 = { version = "^24.4", source = "nvidia_pypi" }
pynvjitlink-cu12 = { version = "^0.1.14", source = "nvidia_pypi" }
pylibraft-cu12 = { version = "^24.4", source = "nvidia_pypi" }

[[tool.poetry.source]]
name = "PyPI"
priority = "primary"

[[tool.poetry.source]]
name = "nvidia_pypi"
url = "https://pypi.nvidia.com"
priority = "supplemental"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
